import{r as l,a as oe,R as ce}from"./vendor-cxkclgJA.js";import{f as ie,B as le,C as ue}from"./ethers-LbpytvJP.js";(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const w of i.addedNodes)w.tagName==="LINK"&&w.rel==="modulepreload"&&s(w)}).observe(document,{childList:!0,subtree:!0});function a(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=a(r);fetch(r.href,i)}})();var J={exports:{}},G={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var de=l,me=Symbol.for("react.element"),pe=Symbol.for("react.fragment"),he=Object.prototype.hasOwnProperty,fe=de.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,be={key:!0,ref:!0,__self:!0,__source:!0};function z(e,n,a){var s,r={},i=null,w=null;a!==void 0&&(i=""+a),n.key!==void 0&&(i=""+n.key),n.ref!==void 0&&(w=n.ref);for(s in n)he.call(n,s)&&!be.hasOwnProperty(s)&&(r[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps,n)r[s]===void 0&&(r[s]=n[s]);return{$$typeof:me,type:e,key:i,ref:w,props:r,_owner:fe.current}}G.Fragment=pe;G.jsx=z;G.jsxs=z;J.exports=G;var t=J.exports,W={},H=oe;W.createRoot=H.createRoot,W.hydrateRoot=H.hydrateRoot;const $="0x1BbD539D823242079D837C29878FAd11B8daF839",L="0xaa36a7",ge=["https://sepolia.infura.io/v3/YOUR_INFURA_KEY","https://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_KEY","https://sepolia.gateway.tenderly.co","https://rpc.sepolia.org","https://sepolia.etherscan.io/api"],Ee={chainId:L,chainName:"Sepolia Test Network",rpcUrls:ge,nativeCurrency:{name:"Sepolia Ether",symbol:"ETH",decimals:18},blockExplorerUrls:["https://sepolia.etherscan.io/"],iconUrls:["https://sepolia.etherscan.io/images/svg/brands/ethereum-original.svg"]},Ne=["function createDebt(uint256 _encryptedAmount, uint256 _encryptedInterestRate, uint256 _termInDays, bool _isAnonymous) external returns (uint256)","function proposeRestructuring(uint256 _debtId, uint256 _newEncryptedAmount, uint256 _newEncryptedRate, uint256 _newTermInDays, string _reason) external returns (uint256)","function approveProposal(uint256 _proposalId, bool _approve) external","function executeProposal(uint256 _proposalId) external","function markDebtResolved(uint256 _debtId) external","function markDebtDefaulted(uint256 _debtId) external","function setAuthorizedCreditor(address _creditor, bool _authorized) external","function getDebtInfo(uint256 _debtId) external view returns (address, uint256, uint256, uint256, uint8, bool, bytes32)","function getEncryptedDebtAmount(uint256 _debtId) external view returns (uint256)","function getEncryptedInterestRate(uint256 _debtId) external view returns (uint256)","function getUserDebts(address _user) external view returns (uint256[])","function getUserProposals(address _user) external view returns (uint256[])","function getProposalInfo(uint256 _proposalId) external view returns (uint256, address, uint256, uint256, uint8, string, bool, bool)","function getTotalDebts() external view returns (uint256)","function getTotalProposals() external view returns (uint256)","function owner() external view returns (address)","function nextDebtId() external view returns (uint256)","function nextProposalId() external view returns (uint256)","function authorizedCreditors(address) external view returns (bool)","event DebtCreated(uint256 indexed debtId, address indexed debtor, uint256 originalTerm, bool isAnonymous, uint256 timestamp)","event RestructuringProposed(uint256 indexed proposalId, uint256 indexed debtId, address indexed proposer, uint256 newTerm, uint256 timestamp)","event ProposalStatusChanged(uint256 indexed proposalId, uint8 newStatus, address indexed changedBy, uint256 timestamp)","event DebtStatusChanged(uint256 indexed debtId, uint8 newStatus, address indexed changedBy, uint256 timestamp)","event ApprovalGranted(uint256 indexed proposalId, address indexed approver, bool isCreditor, uint256 timestamp)"],M={CREATE_DEBT:2e5,PROPOSE_RESTRUCTURING:25e4,APPROVE_PROPOSAL:1e5,EXECUTE_PROPOSAL:15e4,MARK_RESOLVED:8e4,MARK_DEFAULTED:8e4},B={maxFeePerGas:null,maxPriorityFeePerGas:null,confirmations:1,timeout:3e5},Q={"personal-loan":{amount:5e3,rate:12,days:730,reason:"Personal loan for home improvement",category:"Personal"},"credit-card":{amount:2500,rate:18,days:548,reason:"Credit card debt consolidation",category:"Credit"},"student-loan":{amount:15e3,rate:6,days:3650,reason:"Student loan for education expenses",category:"Education"},"business-loan":{amount:25e3,rate:8,days:1825,reason:"Small business working capital loan",category:"Business"},mortgage:{amount:2e5,rate:4,days:10950,reason:"Home mortgage financing",category:"Real Estate"},"medical-debt":{amount:8e3,rate:0,days:1095,reason:"Medical expenses payment plan",category:"Medical"}},V={hardship:{factor:.8,rateFactor:.7,termFactor:1.5,reason:"Financial hardship due to unexpected circumstances - requesting reduced payments and extended term",category:"Hardship"},"lower-rate":{factor:1,rateFactor:.6,termFactor:1,reason:"Request for lower interest rate based on improved credit score and payment history",category:"Rate Reduction"},"extend-term":{factor:1,rateFactor:1,termFactor:2,reason:"Requesting extended payment term to reduce monthly payment burden",category:"Term Extension"},"reduce-principal":{factor:.7,rateFactor:1,termFactor:1,reason:"Settlement offer - willing to pay reduced principal amount for immediate resolution",category:"Principal Reduction"}},x={CONNECTING:"Connecting to MetaMask wallet...",CONNECTED:"Successfully connected to Sepolia testnet! 🌐",WALLET_NOT_FOUND:"MetaMask wallet not found. Please install MetaMask browser extension.",WRONG_NETWORK:"Please switch to Sepolia test network in MetaMask.",CONTRACT_NOT_DEPLOYED:"Smart contract not deployed. Please deploy the DebtManager contract first.",INSUFFICIENT_BALANCE:"Insufficient ETH balance. Please get Sepolia ETH from a faucet.",LOADING_DATA:"Loading your debt records from blockchain...",CHECKING_BALANCE:"Checking wallet balance and network status...",ESTIMATING_GAS:"Estimating gas fees for transaction...",CREATING_DEBT:"Creating encrypted debt record on Sepolia blockchain...",PROPOSING_RESTRUCTURING:"Submitting restructuring proposal to blockchain...",APPROVING_PROPOSAL:"Submitting approval to blockchain...",EXECUTING_PROPOSAL:"Executing approved proposal on blockchain...",MARKING_RESOLVED:"Marking debt as resolved on blockchain...",TRANSACTION_PENDING:"Transaction submitted! Waiting for blockchain confirmation...",TRANSACTION_CONFIRMING:"Transaction confirmed! Processing on network...",TRANSACTION_SUCCESS:"Transaction completed successfully! ✅",TRANSACTION_FAILED:"Transaction failed. Please check your wallet and try again.",TRANSACTION_REJECTED:"Transaction was rejected by user.",HIGH_GAS_WARNING:"Gas fees are currently high. Consider waiting for lower fees.",GAS_ESTIMATION_FAILED:"Could not estimate gas fees. Transaction may fail.",NETWORK_CONGESTION:"Network congestion detected. Transaction may take longer.",BLOCK_CONFIRMATION:"Waiting for block confirmations..."},Ce={MIN_ETH_BALANCE:.001},Z={CURRENCY:{style:"currency",currency:"USD",minimumFractionDigits:2,maximumFractionDigits:2},DATE:{year:"numeric",month:"short",day:"numeric"}},ee={BASE:"https://sepolia.etherscan.io",TRANSACTION:"https://sepolia.etherscan.io/tx",ADDRESS:"https://sepolia.etherscan.io/address",CONTRACT:"https://sepolia.etherscan.io/address",BLOCK:"https://sepolia.etherscan.io/block"},O={ENABLE_CONSOLE_LOGS:!0,MOCK_TRANSACTIONS:!1,SKIP_WALLET_CHECK:!1,DEBUG_MODE:!1};var k=(e=>(e[e.ACTIVE=0]="ACTIVE",e[e.RESTRUCTURING=1]="RESTRUCTURING",e[e.RESOLVED=2]="RESOLVED",e[e.DEFAULTED=3]="DEFAULTED",e))(k||{}),F=(e=>(e[e.PENDING=0]="PENDING",e[e.ACCEPTED=1]="ACCEPTED",e[e.REJECTED=2]="REJECTED",e[e.EXECUTED=3]="EXECUTED",e))(F||{});const xe=e=>new Intl.NumberFormat("en-US",Z.CURRENCY).format(e),K=e=>new Date(e*1e3).toLocaleDateString("en-US",Z.DATE),Y=e=>e?`${e.slice(0,6)}...${e.slice(-4)}`:"",ye=e=>({[k.ACTIVE]:"🟢 Active",[k.RESTRUCTURING]:"🟡 Restructuring",[k.RESOLVED]:"✅ Resolved",[k.DEFAULTED]:"🔴 Defaulted"})[e]||"Unknown",Te=e=>({[F.PENDING]:"⏳ Pending",[F.ACCEPTED]:"✅ Accepted",[F.REJECTED]:"❌ Rejected",[F.EXECUTED]:"🚀 Executed"})[e]||"Unknown",te=e=>{const n=parseFloat(e);return isNaN(n)?"Amount must be a valid number":n<=0?"Amount must be greater than 0":n>1e7?"Amount is too large":null},ne=e=>{const n=parseFloat(e);return isNaN(n)?"Interest rate must be a valid number":n<0?"Interest rate cannot be negative":n>100?"Interest rate cannot exceed 100%":null},se=e=>{const n=parseInt(e);return isNaN(n)?"Term must be a valid number":n<=0?"Term must be greater than 0 days":n>36500?"Term cannot exceed 100 years":null},P=e=>e?.reason?e.reason:e?.message?e.message.includes("user rejected")?"Transaction was rejected by user":e.message.includes("insufficient funds")?"Insufficient funds for transaction":e.message.includes("gas")?"Transaction failed due to gas limit":e.message:"Unknown error occurred",q=e=>Math.floor(e*100),X=e=>Math.floor(e*100),we=e=>`${e.toFixed(2)}%`,Re=e=>e<30?`${e} days`:e<365?`${Math.round(e/30.44)} months`:`${Math.round(e/365)} years`,Ae=()=>{const[e,n]=l.useState({account:null,provider:null,signer:null,contract:null,isConnected:!1,chainId:null}),[a,s]=l.useState({balance:"0",chainId:null,isConnecting:!1,lastTransactionHash:null}),[r,i]=l.useState(!1),[w,E]=l.useState(null),d=l.useCallback((m,b=!1)=>{console.log(`[Wallet] ${b?"ERROR":"INFO"}:`,m),E(b?m:null)},[]),h=l.useCallback(()=>window.ethereum?(window.ethereum.isMetaMask||d("Please use MetaMask wallet for the best experience.",!1),!0):(d(x.WALLET_NOT_FOUND,!0),!1),[d]),N=l.useCallback(async(m,b)=>{try{const v=await m.getBalance(b);return ie(v)}catch(v){return console.error("[Wallet] Balance check failed:",v),"0"}},[]),R=l.useCallback(m=>parseFloat(m)<Ce.MIN_ETH_BALANCE?(d(x.INSUFFICIENT_BALANCE,!0),!1):!0,[d]),c=l.useCallback(async()=>{if(!window.ethereum)return!1;try{return await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:L}]}),O.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Successfully switched to Sepolia"),!0}catch(m){if(m.code===4902)try{return await window.ethereum.request({method:"wallet_addEthereumChain",params:[Ee]}),O.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Successfully added Sepolia to MetaMask"),!0}catch(b){return console.error("[Wallet] Failed to add Sepolia:",b),d("Failed to add Sepolia network to MetaMask.",!0),!1}else return console.error("[Wallet] Failed to switch networks:",m),d(P(m),!0),!1}},[d]),y=l.useCallback(async m=>(d(x.CONTRACT_NOT_DEPLOYED,!0),!1),[d]),o=l.useCallback(async()=>{if(!h())return!1;try{i(!0),s(C=>({...C,isConnecting:!0})),d(x.CONNECTING);const m=await window.ethereum.request({method:"eth_requestAccounts"});if(!m||m.length===0)return d("No accounts found. Please create an account in MetaMask.",!0),!1;const b=m[0];if(O.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Connected to account:",b),d("Checking network connection..."),await window.ethereum.request({method:"eth_chainId"})!==L&&(d("Switching to Sepolia test network..."),!await c()))return!1;d("Initializing blockchain connection...");const _=new le(window.ethereum),S=await _.getSigner();d(x.CHECKING_BALANCE);const u=await N(_,b);if(R(u)||d(`Low ETH balance (${parseFloat(u).toFixed(4)} ETH). Get free Sepolia ETH from: https://sepoliafaucet.com`,!0),!await y(_))return!1;d("Connecting to smart contract...");const T=new ue($,Ne,S);try{const C=await T.getTotalDebts?.()||0;O.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Contract connection successful, total debts:",C.toString())}catch(C){return O.ENABLE_CONSOLE_LOGS&&console.error("[Wallet] Contract test call failed:",C),d("Smart contract is not responding. Please check deployment.",!0),!1}return n({account:b,provider:_,signer:S,contract:T,isConnected:!0,chainId:L}),s({balance:u,chainId:L,isConnecting:!1,lastTransactionHash:null}),d(x.CONNECTED),O.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Connection complete:",{account:b,balance:`${u} ETH`,chainId:L,contract:$}),!0}catch(m){if(console.error("[Wallet] Connection failed:",m),m.code===4001)d("Connection was rejected by user.",!0);else if(m.code===-32002)d("MetaMask is already processing a request. Please check MetaMask.",!0);else{const b=P(m);d(`Connection failed: ${b}`,!0)}return!1}finally{i(!1),s(m=>({...m,isConnecting:!1}))}},[h,c,N,R,y,d]),D=l.useCallback(()=>{console.log("[Wallet] Disconnecting wallet"),n({account:null,provider:null,signer:null,contract:null,isConnected:!1,chainId:null}),s({balance:"0",chainId:null,isConnecting:!1,lastTransactionHash:null}),E(null)},[]),I=l.useCallback(m=>{s(b=>({...b,lastTransactionHash:m})),console.log(`[Wallet] Transaction added: ${ee.TRANSACTION}/${m}`)},[]),A=l.useCallback(async()=>{if(!(!e.provider||!e.account))try{const m=await N(e.provider,e.account);s(b=>({...b,balance:m})),O.ENABLE_CONSOLE_LOGS&&console.log(`[Wallet] Balance refreshed: ${m} ETH`)}catch(m){console.error("[Wallet] Balance refresh failed:",m)}},[e.provider,e.account,N]);return l.useEffect(()=>{if(!window.ethereum)return;const m=S=>{console.log("[Wallet] Accounts changed:",S),S.length===0?(D(),d("Wallet disconnected by user.",!1)):S[0]!==e.account&&window.location.reload()},b=S=>{console.log("[Wallet] Chain changed to:",S),S!==L?(d(x.WRONG_NETWORK,!0),n(u=>({...u,isConnected:!1}))):window.location.reload()},v=S=>{console.log("[Wallet] MetaMask connected:",S)},_=S=>{console.log("[Wallet] MetaMask disconnected:",S),D()};return window.ethereum.on("accountsChanged",m),window.ethereum.on("chainChanged",b),window.ethereum.on("connect",v),window.ethereum.on("disconnect",_),()=>{window.ethereum&&(window.ethereum.removeListener("accountsChanged",m),window.ethereum.removeListener("chainChanged",b),window.ethereum.removeListener("connect",v),window.ethereum.removeListener("disconnect",_))}},[e.account,D,d]),l.useEffect(()=>{const b=setTimeout(async()=>{if(!(!window.ethereum||e.isConnected))try{const v=await window.ethereum.request({method:"eth_accounts"});v&&v.length>0&&(O.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Auto-connecting to existing session"),await o())}catch{console.log("[Wallet] No existing session found")}},100);return()=>clearTimeout(b)},[o,e.isConnected]),{wallet:e,walletState:a,isLoading:r,error:w,connectWallet:o,disconnectWallet:D,addTransaction:I,refreshBalance:A,setStatus:d}},Se=(e,n)=>{const[a,s]=l.useState([]),[r,i]=l.useState([]),[w,E]=l.useState(!1),[d,h]=l.useState(null),[N,R]=l.useState(null),[c,y]=l.useState(null),o=l.useCallback((u,p=!1)=>{console.log(`[DebtManager] ${p?"ERROR":"INFO"}:`,u),p?(h(u),R(null)):(h(null),R(u))},[]),D=l.useCallback(async(u,p,T)=>{if(!e.provider||!e.contract)return null;try{o(x.ESTIMATING_GAS);const g=(await e.provider.getFeeData()).gasPrice||BigInt("20000000000");let f;try{f=await e.contract[u].estimateGas(...p)}catch{f=BigInt(T),O.ENABLE_CONSOLE_LOGS&&console.warn("[DebtManager] Gas estimation failed, using default:",T)}const j=f*BigInt(120)/BigInt(100),re=j*g,U=Number(re)/1e18,ae=`Gas: ${j.toString()}, Cost: ~${U.toFixed(6)} ETH`;return y(ae),O.ENABLE_CONSOLE_LOGS&&console.log("[DebtManager] Gas estimation:",{method:u,estimatedGas:f.toString(),gasWithBuffer:j.toString(),gasPrice:g.toString(),costInEth:U.toFixed(6)}),{gasLimit:j,gasPrice:g,costInEth:U}}catch(C){return console.error("[DebtManager] Gas estimation error:",C),o(x.GAS_ESTIMATION_FAILED,!0),null}},[e.provider,e.contract,o]),I=l.useCallback(async(u,p,T,C)=>{if(!e.contract||!e.signer)throw new Error("Contract or signer not available");try{const g=await D(u,p,T);if(!g)throw new Error("Failed to estimate gas fees");o(`${C} - Preparing transaction...`);const f=await e.contract[u](...p,{gasLimit:g.gasLimit,maxFeePerGas:B.maxFeePerGas,maxPriorityFeePerGas:B.maxPriorityFeePerGas});O.ENABLE_CONSOLE_LOGS&&console.log("[DebtManager] Transaction submitted:",{method:u,hash:f.hash,gasLimit:g.gasLimit.toString()}),n&&n(f.hash),o(x.TRANSACTION_PENDING),y(null),o(x.TRANSACTION_CONFIRMING);const j=await f.wait(B.confirmations);if(j.status===1)return o(x.TRANSACTION_SUCCESS),O.ENABLE_CONSOLE_LOGS&&console.log("[DebtManager] Transaction confirmed:",{hash:f.hash,blockNumber:j.blockNumber,gasUsed:j.gasUsed?.toString(),explorerUrl:`${ee.TRANSACTION}/${f.hash}`}),{success:!0,receipt:j,hash:f.hash};throw new Error("Transaction failed during execution")}catch(g){throw console.error("[DebtManager] Transaction failed:",g),g.code===4001?new Error(x.TRANSACTION_REJECTED):new Error(`${x.TRANSACTION_FAILED}: ${P(g)}`)}},[e.contract,e.signer,D,n,o]),A=l.useCallback(async()=>{if(!(!e.isConnected||!e.contract||!e.account))try{E(!0),o(x.LOADING_DATA);const u=await e.contract.getUserDebts(e.account),p=[];for(const g of u){const f=await e.contract.getDebtInfo(g);p.push({id:Number(g),debtor:f[0],originalTerm:Number(f[1]),remainingTerm:Number(f[2]),createdAt:Number(f[3]),status:f[4],isAnonymous:f[5]})}s(p);const T=await e.contract.getUserProposals(e.account),C=[];for(const g of T){const f=await e.contract.getProposalInfo(g);C.push({id:Number(g),debtId:Number(f[0]),proposer:f[1],newTerm:Number(f[2]),proposedAt:Number(f[3]),status:f[4],reason:f[5]})}i(C),o("Data loaded successfully!")}catch(u){const p=P(u);o(`Failed to load data: ${p}`,!0)}finally{E(!1)}},[e,o]),m=l.useCallback(async u=>{if(!e.isConnected||!e.contract)return o("Please connect your wallet first!",!0),!1;try{E(!0),o(x.CREATING_DEBT);const p=q(parseFloat(u.amount)),T=X(parseFloat(u.interestRate)),C=parseInt(u.termDays),g=[p,T,C,u.isAnonymous];return(await I("createDebt",g,M.CREATE_DEBT,"Creating encrypted debt record")).success?(o("Debt record created successfully! 🔐"),await A(),!0):!1}catch(p){return o(p.message||`Failed to create debt: ${P(p)}`,!0),!1}finally{E(!1)}},[e,o,A,I]),b=l.useCallback(async u=>{if(!e.isConnected||!e.contract)return o("Please connect your wallet first!",!0),!1;try{E(!0),o(x.PROPOSING_RESTRUCTURING);const p=q(parseFloat(u.newAmount)),T=X(parseFloat(u.newRate)),C=parseInt(u.newTerm),g=[u.selectedDebtId,p,T,C,u.reason||"Debt restructuring request"];return(await I("proposeRestructuring",g,M.PROPOSE_RESTRUCTURING,"Submitting restructuring proposal")).success?(o("Restructuring proposal submitted successfully! 📋"),await A(),!0):!1}catch(p){return o(p.message||`Failed to submit proposal: ${P(p)}`,!0),!1}finally{E(!1)}},[e,o,A,I]),v=l.useCallback(async(u,p)=>{if(!e.isConnected||!e.contract)return o("Please connect your wallet first!",!0),!1;try{return E(!0),o(x.APPROVING_PROPOSAL),(await I("approveProposal",[u,p],M.APPROVE_PROPOSAL,`${p?"Approving":"Rejecting"} restructuring proposal`)).success?(o(`Proposal ${p?"approved":"rejected"} successfully!`),await A(),!0):!1}catch(T){return o(T.message||`Failed to ${p?"approve":"reject"} proposal: ${P(T)}`,!0),!1}finally{E(!1)}},[e,o,A,I]),_=l.useCallback(async u=>{if(!e.isConnected||!e.contract)return o("Please connect your wallet first!",!0),!1;try{return E(!0),o(x.EXECUTING_PROPOSAL),(await I("executeProposal",[u],M.EXECUTE_PROPOSAL,"Executing approved restructuring proposal")).success?(o("Proposal executed successfully! 🚀"),await A(),!0):!1}catch(p){return o(p.message||`Failed to execute proposal: ${P(p)}`,!0),!1}finally{E(!1)}},[e,o,A,I]),S=l.useCallback(async u=>{if(!e.isConnected||!e.contract)return o("Please connect your wallet first!",!0),!1;try{return E(!0),o(x.MARKING_RESOLVED),(await I("markDebtResolved",[u],M.MARK_RESOLVED,"Marking debt as resolved")).success?(o("Debt marked as resolved successfully! ✅"),await A(),!0):!1}catch(p){return o(p.message||`Failed to resolve debt: ${P(p)}`,!0),!1}finally{E(!1)}},[e,o,A,I]);return l.useEffect(()=>{e.isConnected&&A()},[e.isConnected,A]),{userDebts:a,userProposals:r,isLoading:w,error:d,transactionStatus:N,estimatedGas:c,createDebt:m,proposeRestructuring:b,approveProposal:v,executeProposal:_,markDebtResolved:S,loadUserData:A,setStatus:o,estimateGas:D}},Ie=()=>t.jsx("div",{className:"header",children:t.jsxs("div",{className:"logo-container",children:[t.jsx("h1",{className:"title",children:"🔐 Anonymous Debt Restructuring"}),t.jsx("p",{className:"subtitle",children:"Privacy-First Debt Management Platform"})]})}),De=({message:e,isError:n=!1})=>t.jsx("div",{className:`message-box ${n?"error":"info"}`,children:t.jsxs("p",{children:["> ",e]})}),ve=({onConnect:e,isLoading:n})=>t.jsxs("div",{className:"wallet-connection",children:[t.jsxs("div",{className:"connection-prompt",children:[t.jsx("h3",{children:"Connect Your Wallet"}),t.jsx("p",{children:"Connect your MetaMask wallet to start managing debts anonymously on Sepolia testnet."})]}),t.jsx("button",{className:"connect-button",onClick:e,disabled:n,children:n?t.jsxs("span",{className:"loading-text",children:[t.jsx("span",{className:"loading-spinner"}),"Connecting..."]}):"Connect MetaMask Wallet"})]}),Oe=({onTabChange:e})=>{const n=a=>{e("create"),window.dispatchEvent(new CustomEvent("loadDebtPreset",{detail:a}))};return t.jsxs("div",{className:"preset-container",children:[t.jsx("h3",{children:"Quick Debt Scenarios"}),t.jsx("div",{className:"preset-grid",children:Object.entries(Q).map(([a,s])=>t.jsxs("button",{className:"preset-button",onClick:()=>n(a),children:[t.jsx("div",{className:"preset-icon",children:_e(a)}),t.jsx("div",{className:"preset-title",children:je(a)}),t.jsxs("div",{className:"preset-details",children:[xe(s.amount)," - ",we(s.rate)," - ",Re(s.days)]})]},a))})]})},_e=e=>({"personal-loan":"💼","credit-card":"💳","student-loan":"🎓","business-loan":"🏢",mortgage:"🏠","medical-debt":"🏥"})[e]||"💰",je=e=>({"personal-loan":"Personal Loan","credit-card":"Credit Card Debt","student-loan":"Student Loan","business-loan":"Business Loan",mortgage:"Mortgage","medical-debt":"Medical Debt"})[e]||e.replace("-"," "),Pe=({activeTab:e,onTabChange:n,debtCount:a})=>t.jsxs("div",{className:"tab-container",children:[t.jsx("button",{className:`tab-button ${e==="create"?"active":""}`,onClick:()=>n("create"),children:"Create Debt"}),t.jsxs("button",{className:`tab-button ${e==="view"?"active":""}`,onClick:()=>n("view"),children:["My Debts (",a,")"]}),t.jsx("button",{className:`tab-button ${e==="propose"?"active":""}`,onClick:()=>n("propose"),children:"Propose Restructuring"})]}),Le=({onSubmit:e,isLoading:n})=>{const[a,s]=l.useState({amount:"",interestRate:"",termDays:"",isAnonymous:!0}),[r,i]=l.useState({});l.useEffect(()=>{const h=N=>{const R=N.detail,c=Q[R];c&&(s({amount:c.amount.toString(),interestRate:c.rate.toString(),termDays:c.days.toString(),isAnonymous:!0}),i({}))};return window.addEventListener("loadDebtPreset",h),()=>window.removeEventListener("loadDebtPreset",h)},[]);const w=()=>{const h={},N=te(a.amount);N&&(h.amount=N);const R=ne(a.interestRate);R&&(h.interestRate=R);const c=se(a.termDays);return c&&(h.termDays=c),i(h),Object.keys(h).length===0},E=async h=>{if(h.preventDefault(),!w())return;await e(a)&&(s({amount:"",interestRate:"",termDays:"",isAnonymous:!0}),i({}))},d=(h,N)=>{s(R=>({...R,[h]:N})),r[h]&&i(R=>({...R,[h]:void 0}))};return t.jsxs("form",{className:"form-container",onSubmit:E,children:[t.jsx("h3",{children:"Create New Debt Record"}),t.jsxs("div",{className:"form-field",children:[t.jsx("input",{className:`input-box ${r.amount?"error":""}`,type:"number",placeholder:"Debt Amount (e.g., 5000.00)",value:a.amount,onChange:h=>d("amount",h.target.value),step:"0.01",min:"0",disabled:n}),r.amount&&t.jsx("span",{className:"error-text",children:r.amount})]}),t.jsxs("div",{className:"form-field",children:[t.jsx("input",{className:`input-box ${r.interestRate?"error":""}`,type:"number",placeholder:"Interest Rate % (e.g., 12.50)",value:a.interestRate,onChange:h=>d("interestRate",h.target.value),step:"0.01",min:"0",max:"100",disabled:n}),r.interestRate&&t.jsx("span",{className:"error-text",children:r.interestRate})]}),t.jsxs("div",{className:"form-field",children:[t.jsx("input",{className:`input-box ${r.termDays?"error":""}`,type:"number",placeholder:"Term in Days (e.g., 730)",value:a.termDays,onChange:h=>d("termDays",h.target.value),step:"1",min:"1",disabled:n}),r.termDays&&t.jsx("span",{className:"error-text",children:r.termDays})]}),t.jsxs("label",{className:"checkbox-container",children:[t.jsx("input",{type:"checkbox",checked:a.isAnonymous,onChange:h=>d("isAnonymous",h.target.checked),disabled:n}),t.jsx("span",{children:"Create as anonymous debt (recommended for privacy)"})]}),t.jsx("button",{type:"submit",className:"button create-button",disabled:n||!a.amount||!a.interestRate||!a.termDays,children:n?"Creating...":"Create Encrypted Debt Record"})]})},ke=({debts:e,proposals:n,onMarkResolved:a,isLoading:s})=>t.jsxs("div",{className:"data-container",children:[t.jsx("h3",{children:"My Debt Records"}),e.length===0?t.jsx("p",{children:"No debts found. Create your first debt record!"}):t.jsx("div",{className:"debt-list",children:e.map(r=>t.jsxs("div",{className:"debt-item",children:[t.jsxs("div",{className:"debt-header",children:[t.jsxs("strong",{children:["Debt #",r.id]}),t.jsx("span",{className:"status",children:ye(r.status)})]}),t.jsxs("div",{className:"debt-details",children:[t.jsxs("p",{children:["Term: ",r.remainingTerm,"/",r.originalTerm," days"]}),t.jsxs("p",{children:["Created: ",K(r.createdAt)]}),t.jsxs("p",{children:["Privacy: ",r.isAnonymous?"🔐 Anonymous":"👤 Public"]}),t.jsx("p",{children:t.jsx("small",{children:"💡 Amount & interest rate are encrypted on-chain"})})]}),r.status===k.ACTIVE&&t.jsx("button",{className:"resolve-button",onClick:()=>a(r.id),disabled:s,children:"Mark as Resolved"})]},r.id))}),t.jsx("h3",{children:"My Restructuring Proposals"}),n.length===0?t.jsx("p",{children:"No proposals submitted yet."}):t.jsx("div",{className:"proposal-list",children:n.map(r=>t.jsxs("div",{className:"proposal-item",children:[t.jsxs("div",{className:"proposal-header",children:[t.jsxs("strong",{children:["Proposal #",r.id]})," for Debt #",r.debtId,t.jsx("span",{className:"status",children:Te(r.status)})]}),t.jsxs("div",{className:"proposal-details",children:[t.jsxs("p",{children:["New Term: ",r.newTerm," days"]}),t.jsxs("p",{children:["Reason: ",r.reason]}),t.jsxs("p",{children:["Proposed: ",K(r.proposedAt)]})]})]},r.id))})]}),Me=({debts:e,onSubmit:n,isLoading:a})=>{const[s,r]=l.useState({selectedDebtId:"",newAmount:"",newRate:"",newTerm:"",reason:""}),[i,w]=l.useState({}),E=e.filter(c=>c.status===k.ACTIVE),d=()=>{const c={};s.selectedDebtId||(c.selectedDebtId="Please select a debt");const y=te(s.newAmount);y&&(c.newAmount=y);const o=ne(s.newRate);o&&(c.newRate=o);const D=se(s.newTerm);return D&&(c.newTerm=D),w(c),Object.keys(c).length===0},h=async c=>{if(c.preventDefault(),!d())return;await n(s)&&(r({selectedDebtId:"",newAmount:"",newRate:"",newTerm:"",reason:""}),w({}))},N=(c,y)=>{r(o=>({...o,[c]:y})),i[c]&&w(o=>({...o,[c]:void 0}))},R=c=>{const y=V[c];if(!y||!s.selectedDebtId)return;const o=parseFloat(s.newAmount)||1e3,D=parseFloat(s.newRate)||10;r(I=>({...I,newAmount:Math.round(o*y.factor).toString(),newRate:(D*y.rateFactor).toFixed(2),newTerm:Math.round(365*y.termFactor).toString(),reason:y.reason}))};return t.jsxs("form",{className:"form-container",onSubmit:h,children:[t.jsx("h3",{children:"Propose Debt Restructuring"}),t.jsxs("div",{className:"form-field",children:[t.jsxs("select",{className:`input-box ${i.selectedDebtId?"error":""}`,value:s.selectedDebtId,onChange:c=>N("selectedDebtId",c.target.value),disabled:a,children:[t.jsx("option",{value:"",children:"Select a debt to restructure"}),E.map(c=>t.jsxs("option",{value:c.id,children:["Debt #",c.id," - ",c.remainingTerm,"/",c.originalTerm," days"]},c.id))]}),i.selectedDebtId&&t.jsx("span",{className:"error-text",children:i.selectedDebtId})]}),t.jsxs("div",{className:"form-field",children:[t.jsx("input",{className:`input-box ${i.newAmount?"error":""}`,type:"number",placeholder:"New Amount (e.g., 4000.00)",value:s.newAmount,onChange:c=>N("newAmount",c.target.value),step:"0.01",min:"0",disabled:a}),i.newAmount&&t.jsx("span",{className:"error-text",children:i.newAmount})]}),t.jsxs("div",{className:"form-field",children:[t.jsx("input",{className:`input-box ${i.newRate?"error":""}`,type:"number",placeholder:"New Interest Rate % (e.g., 8.50)",value:s.newRate,onChange:c=>N("newRate",c.target.value),step:"0.01",min:"0",max:"100",disabled:a}),i.newRate&&t.jsx("span",{className:"error-text",children:i.newRate})]}),t.jsxs("div",{className:"form-field",children:[t.jsx("input",{className:`input-box ${i.newTerm?"error":""}`,type:"number",placeholder:"New Term in Days (e.g., 365)",value:s.newTerm,onChange:c=>N("newTerm",c.target.value),step:"1",min:"1",disabled:a}),i.newTerm&&t.jsx("span",{className:"error-text",children:i.newTerm})]}),t.jsx("div",{className:"form-field",children:t.jsx("textarea",{className:"input-box",placeholder:"Reason for restructuring (optional)",value:s.reason,onChange:c=>N("reason",c.target.value),rows:3,disabled:a})}),t.jsxs("div",{className:"restructure-presets",children:[t.jsx("h4",{children:"Common Restructuring Scenarios:"}),t.jsx("div",{className:"preset-buttons",children:Object.entries(V).map(([c])=>t.jsx("button",{type:"button",className:"preset-small-button",onClick:()=>R(c),disabled:a||!s.selectedDebtId,children:c.replace("-"," ").replace(/\b\w/g,y=>y.toUpperCase())},c))})]}),t.jsx("button",{type:"submit",className:"button propose-button",disabled:a||!s.selectedDebtId||!s.newAmount||!s.newRate||!s.newTerm,children:a?"Proposing...":"Submit Restructuring Proposal"})]})},Fe=()=>{const[e,n]=l.useState("create"),a=Ae(),s=Se(a.wallet,a.addTransaction),r=a.error||s.error,i=a.isLoading||s.isLoading;return t.jsx("div",{className:"app",children:t.jsxs("div",{className:"terminal-box",children:[t.jsx(Ie,{}),t.jsxs("div",{className:"blockchain-info",children:[t.jsxs("p",{children:["> ",t.jsx("strong",{children:"PRIVACY-FIRST DEBT MANAGEMENT"})," - Powered by Blockchain Encryption!"]}),t.jsxs("p",{children:["> Contract:"," ",t.jsx("span",{className:"highlight",children:a.wallet.isConnected?Y($):"Not Connected"})]}),t.jsxs("p",{children:["> Network: ",t.jsx("span",{className:"highlight",children:"Sepolia Testnet"})]})]}),t.jsxs("div",{className:"terminal-text",children:[t.jsx("p",{children:"> Welcome to the Anonymous Debt Restructuring Platform."}),t.jsx("p",{children:"> Manage your debts privately using blockchain encryption technology."}),t.jsx("p",{children:"> All financial data is encrypted on-chain - complete privacy guaranteed."}),t.jsx("p",{children:"> Create debt records, propose restructuring terms, and resolve debts securely."}),t.jsx("p",{children:"> Your financial information remains confidential at every step."})]}),t.jsx(De,{message:r||s.transactionStatus||"Ready to manage debts anonymously!",isError:!!r}),s.estimatedGas&&t.jsxs("div",{className:"gas-estimation",children:[t.jsx("span",{className:"highlight",children:"⛽ Gas Estimation:"})," ",s.estimatedGas]}),!a.wallet.isConnected&&t.jsx(ve,{onConnect:a.connectWallet,isLoading:i}),a.wallet.isConnected&&t.jsxs(t.Fragment,{children:[t.jsx(Oe,{onTabChange:n}),t.jsx(Pe,{activeTab:e,onTabChange:n,debtCount:s.userDebts.length}),e==="create"&&t.jsx(Le,{onSubmit:s.createDebt,isLoading:i}),e==="view"&&t.jsx(ke,{debts:s.userDebts,proposals:s.userProposals,onMarkResolved:s.markDebtResolved,isLoading:i}),e==="propose"&&t.jsx(Me,{debts:s.userDebts,onSubmit:s.proposeRestructuring,isLoading:i}),t.jsxs("div",{className:"button-group",children:[t.jsxs("button",{className:"wallet-button connected",disabled:!0,children:["🔐 ",Y(a.wallet.account||"")]}),t.jsxs("button",{className:"wallet-button",onClick:a.refreshBalance,disabled:i,children:["💰 ",a.walletState.balance.slice(0,8)," ETH"]}),a.walletState.lastTransactionHash&&t.jsx("button",{className:"wallet-button",onClick:()=>window.open(`https://sepolia.etherscan.io/tx/${a.walletState.lastTransactionHash}`,"_blank"),children:"🔍 View Last Transaction"})]})]}),t.jsxs("div",{className:"footer",children:[t.jsx("p",{children:"> Anonymous Debt Management - Your Privacy is Protected!"}),t.jsx("p",{children:"> Powered by Blockchain Encryption Technology"})]})]})})};W.createRoot(document.getElementById("root")).render(t.jsx(ce.StrictMode,{children:t.jsx(Fe,{})}));
