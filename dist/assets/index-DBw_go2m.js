import{r as l,a as ee,R as te}from"./vendor-cxkclgJA.js";import{f as ne,B as se,C as re}from"./ethers-CYQN5ZGi.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const c of document.querySelectorAll('link[rel="modulepreload"]'))r(c);new MutationObserver(c=>{for(const h of c)if(h.type==="childList")for(const E of h.addedNodes)E.tagName==="LINK"&&E.rel==="modulepreload"&&r(E)}).observe(document,{childList:!0,subtree:!0});function m(c){const h={};return c.integrity&&(h.integrity=c.integrity),c.referrerPolicy&&(h.referrerPolicy=c.referrerPolicy),c.crossOrigin==="use-credentials"?h.credentials="include":c.crossOrigin==="anonymous"?h.credentials="omit":h.credentials="same-origin",h}function r(c){if(c.ep)return;c.ep=!0;const h=m(c);fetch(c.href,h)}})();var X={exports:{}},U={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ae=l,oe=Symbol.for("react.element"),ce=Symbol.for("react.fragment"),ie=Object.prototype.hasOwnProperty,le=ae.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,ue={key:!0,ref:!0,__self:!0,__source:!0};function J(t,o,m){var r,c={},h=null,E=null;m!==void 0&&(h=""+m),o.key!==void 0&&(h=""+o.key),o.ref!==void 0&&(E=o.ref);for(r in o)ie.call(o,r)&&!ue.hasOwnProperty(r)&&(c[r]=o[r]);if(t&&t.defaultProps)for(r in o=t.defaultProps,o)c[r]===void 0&&(c[r]=o[r]);return{$$typeof:oe,type:t,key:h,ref:E,props:c,_owner:le.current}}U.Fragment=ce;U.jsx=J;U.jsxs=J;X.exports=U;var e=X.exports,W={},H=ee;W.createRoot=H.createRoot,W.hydrateRoot=H.hydrateRoot;const k="0x14e09216003ca55Bbe69884A9D27A52c584fE890",L="0xaa36a7",de=["https://rpc.sepolia.org","https://sepolia.gateway.tenderly.co","https://rpc2.sepolia.org","https://ethereum-sepolia.publicnode.com","https://sepolia.drpc.org"],me={chainId:L,chainName:"Sepolia Test Network",rpcUrls:de,nativeCurrency:{name:"Sepolia Ether",symbol:"ETH",decimals:18},blockExplorerUrls:["https://sepolia.etherscan.io/"],iconUrls:["https://sepolia.etherscan.io/images/svg/brands/ethereum-original.svg"]},he=["function createAnonymousDebt(uint256 amount, uint256 interestRate, uint256 termDays, bytes32 accessKey) external returns (uint256)","function proposeAnonymousRestructuring(uint256 debtId, uint256 newAmount, uint256 newInterestRate, uint256 newTermDays, string calldata reason, bytes32 accessKey) external returns (uint256)","function processAnonymousProposal(uint256 proposalId, bool approve, bytes32 accessKey) external","function finalizeAnonymousDebt(uint256 debtId, bytes32 accessKey) external","function enableAnonymousMode(uint256 debtId, bytes32 newAccessKey) external","function disableAnonymousMode(uint256 debtId, bytes32 accessKey) external","function grantAnonymousAccess(uint256 debtId, address user, bytes32 accessKey) external","function revokeAnonymousAccess(uint256 debtId, address user, bytes32 accessKey) external","function updateAnonymousAccessKey(uint256 debtId, bytes32 oldKey, bytes32 newKey) external","function verifyAnonymousAccess(uint256 debtId, address user, bytes32 accessKey) external view returns (bool)","function getEncryptedDebtData(uint256 debtId, bytes32 accessKey) external view returns (bytes32, bytes32, bytes32)","function getEncryptedProposalData(uint256 proposalId, bytes32 accessKey) external view returns (bytes32, bytes32, bytes32)","function verifyEncryptedAmount(uint256 debtId, bytes32 expectedHash, bytes32 accessKey) external view returns (bool)","function verifyEncryptedRate(uint256 debtId, bytes32 expectedHash, bytes32 accessKey) external view returns (bool)","function getAnonymousDebtInfo(uint256 debtId, bytes32 accessKey) external view returns (bytes32, bytes32, bytes32, uint256, uint256, uint8, bool)","function getAnonymousProposalInfo(uint256 proposalId, bytes32 accessKey) external view returns (uint256, bytes32, bytes32, bytes32, uint256, uint8, bool, string)","function getUserAnonymousDebts(address user, bytes32 accessKey) external view returns (uint256[])","function getUserAnonymousProposals(address user, bytes32 accessKey) external view returns (uint256[])","function getTotalAnonymousDebts() external view returns (uint256)","function getTotalAnonymousProposals() external view returns (uint256)","function getAnonymousDebtCount() external view returns (uint256)","function getResolvedAnonymousCount() external view returns (uint256)","function owner() external view returns (address)","function nextDebtId() external view returns (uint256)","function nextProposalId() external view returns (uint256)","function anonymousMode() external view returns (bool)","event AnonymousDebtCreated(uint256 indexed debtId, bytes32 indexed encryptedDebtor, bytes32 encryptedAmount, bytes32 encryptedRate, uint256 timestamp)","event AnonymousRestructuringProposed(uint256 indexed proposalId, uint256 indexed debtId, bytes32 indexed encryptedProposer, bytes32 encryptedAmount, uint256 timestamp)","event AnonymousProposalProcessed(uint256 indexed proposalId, uint8 newStatus, bytes32 indexed encryptedProcessor, uint256 timestamp)","event AnonymousDebtFinalized(uint256 indexed debtId, uint8 finalStatus, bytes32 indexed encryptedFinalizer, uint256 timestamp)","event AnonymousAccessGranted(uint256 indexed debtId, bytes32 indexed encryptedUser, bytes32 accessKeyHash, uint256 timestamp)","event AnonymousAccessRevoked(uint256 indexed debtId, bytes32 indexed encryptedUser, bytes32 accessKeyHash, uint256 timestamp)"],G={CREATE_DEBT:2e5,PROPOSE_RESTRUCTURING:25e4,APPROVE_PROPOSAL:1e5,EXECUTE_PROPOSAL:15e4,MARK_RESOLVED:8e4,MARK_DEFAULTED:8e4},$={maxFeePerGas:null,maxPriorityFeePerGas:null,confirmations:1,timeout:3e5},N={CONNECTING:"Connecting to MetaMask wallet...",CONNECTED:"Successfully connected to Sepolia testnet! üåê",WALLET_NOT_FOUND:"MetaMask wallet not found. Please install MetaMask browser extension.",WRONG_NETWORK:"Please switch to Sepolia test network in MetaMask.",CONTRACT_NOT_DEPLOYED:"Smart contract not deployed. Please deploy the AnonymousDebtManager contract first.",INSUFFICIENT_BALANCE:"Insufficient ETH balance. Please get Sepolia ETH from a faucet.",LOADING_DATA:"Loading your debt records from blockchain...",CHECKING_BALANCE:"Checking wallet balance and network status...",ESTIMATING_GAS:"Estimating gas fees for transaction...",CREATING_DEBT:"Creating encrypted debt record on Sepolia blockchain...",PROPOSING_RESTRUCTURING:"Submitting restructuring proposal to blockchain...",APPROVING_PROPOSAL:"Submitting approval to blockchain...",EXECUTING_PROPOSAL:"Executing approved proposal on blockchain...",MARKING_RESOLVED:"Marking debt as resolved on blockchain...",TRANSACTION_PENDING:"Transaction submitted! Waiting for blockchain confirmation...",TRANSACTION_CONFIRMING:"Transaction confirmed! Processing on network...",TRANSACTION_SUCCESS:"Transaction completed successfully! ‚úÖ",TRANSACTION_FAILED:"Transaction failed. Please check your wallet and try again.",TRANSACTION_REJECTED:"Transaction was rejected by user.",HIGH_GAS_WARNING:"Gas fees are currently high. Consider waiting for lower fees.",GAS_ESTIMATION_FAILED:"Could not estimate gas fees. Transaction may fail.",NETWORK_CONGESTION:"Network congestion detected. Transaction may take longer.",BLOCK_CONFIRMATION:"Waiting for block confirmations..."},pe={MIN_ETH_BALANCE:.001},Q={BASE:"https://sepolia.etherscan.io",TRANSACTION:"https://sepolia.etherscan.io/tx",ADDRESS:"https://sepolia.etherscan.io/address",CONTRACT:"https://sepolia.etherscan.io/address",BLOCK:"https://sepolia.etherscan.io/block"},x={ENABLE_CONSOLE_LOGS:!0,MOCK_TRANSACTIONS:!1,SKIP_WALLET_CHECK:!1,DEBUG_MODE:!1};var B=(t=>(t[t.ACTIVE=0]="ACTIVE",t[t.RESTRUCTURING=1]="RESTRUCTURING",t[t.RESOLVED=2]="RESOLVED",t[t.DEFAULTED=3]="DEFAULTED",t))(B||{}),K=(t=>(t[t.PENDING=0]="PENDING",t[t.ACCEPTED=1]="ACCEPTED",t[t.REJECTED=2]="REJECTED",t[t.EXECUTED=3]="EXECUTED",t))(K||{});const V=t=>t?`${t.slice(0,6)}...${t.slice(-4)}`:"",_=t=>t?.reason?t.reason:t?.message?t.message.includes("user rejected")?"Transaction was rejected by user":t.message.includes("insufficient funds")?"Insufficient funds for transaction":t.message.includes("gas")?"Transaction failed due to gas limit":t.message:"Unknown error occurred",fe=()=>{const[t,o]=l.useState({account:null,provider:null,signer:null,contract:null,isConnected:!1,chainId:null}),[m,r]=l.useState({balance:"0",chainId:null,isConnecting:!1,lastTransactionHash:null}),[c,h]=l.useState(!1),[E,s]=l.useState(null),i=l.useCallback((n,f=!1)=>{console.log(`[Wallet] ${f?"ERROR":"INFO"}:`,n),s(f?n:null)},[]),R=l.useCallback(()=>window.ethereum?(window.ethereum.isMetaMask||i("Please use MetaMask wallet for the best experience.",!1),!0):(i(N.WALLET_NOT_FOUND,!0),!1),[i]),v=l.useCallback(async(n,f)=>{try{const T=await n.getBalance(f);return ne(T)}catch(T){return console.error("[Wallet] Balance check failed:",T),"0"}},[]),g=l.useCallback(n=>parseFloat(n)<pe.MIN_ETH_BALANCE?(i(N.INSUFFICIENT_BALANCE,!0),!1):!0,[i]),P=l.useCallback(async()=>{if(!window.ethereum)return i("MetaMask not detected. Please install MetaMask browser extension.",!0),!1;try{return i("Switching to Sepolia test network..."),await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:L}]}),x.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Successfully switched to Sepolia network"),i("Successfully connected to Sepolia testnet! üåê"),!0}catch(n){if(console.log("[Wallet] Switch error code:",n.code),console.log("[Wallet] Switch error message:",n.message),n.code===4902||n.code===-32603)try{return i("Adding Sepolia network to MetaMask..."),await window.ethereum.request({method:"wallet_addEthereumChain",params:[me]}),x.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Successfully added Sepolia to MetaMask"),i("Successfully added Sepolia network! üåê"),!0}catch(f){return console.error("[Wallet] Failed to add Sepolia network:",f),i("Failed to add Sepolia network. Please add it manually in MetaMask.",!0),!1}else return n.code===4001?(i("Network switch was rejected by user.",!0),!1):(console.error("[Wallet] Unexpected network switch error:",n),i("Failed to switch to Sepolia network. Please switch manually in MetaMask.",!0),!1)}},[i]),j=l.useCallback(async n=>{if(k.length!==42)return i(N.CONTRACT_NOT_DEPLOYED,!0),!1;try{return await n.getCode(k)==="0x"?(i("Smart contract not found at the specified address. Please verify deployment.",!0),!1):(x.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Contract validated at address:",k),!0)}catch(f){return console.error("[Wallet] Contract validation failed:",f),i("Failed to validate smart contract.",!0),!1}},[i]),a=l.useCallback(async()=>{if(!R())return!1;try{h(!0),r(y=>({...y,isConnecting:!0})),i(N.CONNECTING);const n=await window.ethereum.request({method:"eth_requestAccounts"});if(!n||n.length===0)return i("No accounts found. Please create an account in MetaMask.",!0),!1;const f=n[0];if(x.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Connected to account:",f),i("Checking network connection..."),await window.ethereum.request({method:"eth_chainId"})!==L&&(i("Switching to Sepolia test network..."),!await P()))return!1;i("Initializing blockchain connection...");const D=new se(window.ethereum),w=await D.getSigner();i(N.CHECKING_BALANCE);const d=await v(D,f);if(g(d)||i(`Low ETH balance (${parseFloat(d).toFixed(4)} ETH). Get free Sepolia ETH from: https://sepoliafaucet.com`,!0),!await j(D))return!1;i("Connecting to smart contract...");const b=new re(k,he,w);try{const y=await b.getTotalDebts?.()||0;x.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Contract connection successful, total debts:",y.toString())}catch(y){return x.ENABLE_CONSOLE_LOGS&&console.error("[Wallet] Contract test call failed:",y),i("Smart contract is not responding. Please check deployment.",!0),!1}return o({account:f,provider:D,signer:w,contract:b,isConnected:!0,chainId:L}),r({balance:d,chainId:L,isConnecting:!1,lastTransactionHash:null}),i(N.CONNECTED),x.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Connection complete:",{account:f,balance:`${d} ETH`,chainId:L,contract:k}),!0}catch(n){if(console.error("[Wallet] Connection failed:",n),n.code===4001)i("Connection was rejected by user.",!0);else if(n.code===-32002)i("MetaMask is already processing a request. Please check MetaMask.",!0);else{const f=_(n);i(`Connection failed: ${f}`,!0)}return!1}finally{h(!1),r(n=>({...n,isConnecting:!1}))}},[R,P,v,g,j,i]),O=l.useCallback(()=>{console.log("[Wallet] Disconnecting wallet"),o({account:null,provider:null,signer:null,contract:null,isConnected:!1,chainId:null}),r({balance:"0",chainId:null,isConnecting:!1,lastTransactionHash:null}),s(null)},[]),C=l.useCallback(n=>{r(f=>({...f,lastTransactionHash:n})),console.log(`[Wallet] Transaction added: ${Q.TRANSACTION}/${n}`)},[]),A=l.useCallback(async()=>{if(!(!t.provider||!t.account))try{const n=await v(t.provider,t.account);r(f=>({...f,balance:n})),x.ENABLE_CONSOLE_LOGS&&console.log(`[Wallet] Balance refreshed: ${n} ETH`)}catch(n){console.error("[Wallet] Balance refresh failed:",n)}},[t.provider,t.account,v]);return l.useEffect(()=>{if(!window.ethereum)return;const n=w=>{console.log("[Wallet] Accounts changed:",w),w.length===0?(O(),i("Wallet disconnected by user.",!1)):w[0]!==t.account&&window.location.reload()},f=w=>{console.log("[Wallet] Chain changed to:",w),w!==L?(i(N.WRONG_NETWORK,!0),o(d=>({...d,isConnected:!1}))):window.location.reload()},T=w=>{console.log("[Wallet] MetaMask connected:",w)},D=w=>{console.log("[Wallet] MetaMask disconnected:",w),O()};return window.ethereum.on("accountsChanged",n),window.ethereum.on("chainChanged",f),window.ethereum.on("connect",T),window.ethereum.on("disconnect",D),()=>{window.ethereum&&(window.ethereum.removeListener("accountsChanged",n),window.ethereum.removeListener("chainChanged",f),window.ethereum.removeListener("connect",T),window.ethereum.removeListener("disconnect",D))}},[t.account,O,i]),l.useEffect(()=>{const f=setTimeout(async()=>{if(!(!window.ethereum||t.isConnected))try{const T=await window.ethereum.request({method:"eth_accounts"});T&&T.length>0&&(x.ENABLE_CONSOLE_LOGS&&console.log("[Wallet] Auto-connecting to existing session"),await a())}catch{console.log("[Wallet] No existing session found")}},100);return()=>clearTimeout(f)},[a,t.isConnected]),{wallet:t,walletState:m,isLoading:c,error:E,connectWallet:a,disconnectWallet:O,addTransaction:C,refreshBalance:A,setStatus:i}},q=t=>t>0&&t<=1e7,Y=t=>t>=0&&t<=100,z=t=>t>=1&&t<=36500,ye=(t,o)=>{const[m,r]=l.useState([]),[c,h]=l.useState([]),[E,s]=l.useState(!1),[i,R]=l.useState(null),[v,g]=l.useState(null),[P,j]=l.useState(null),a=l.useCallback((d,u=!1)=>{console.log(`[AnonymousDebtManager] ${u?"ERROR":"INFO"}:`,d),u?(R(d),g(null)):(R(null),g(d))},[]),O=l.useCallback(async(d,u,b)=>{if(!t.provider||!t.contract)return null;try{a(N.ESTIMATING_GAS);const p=(await t.provider.getFeeData()).gasPrice||BigInt("20000000000");let S;try{S=await t.contract[d].estimateGas(...u)}catch{S=BigInt(b),x.ENABLE_CONSOLE_LOGS&&console.warn("[AnonymousDebtManager] Gas estimation failed, using default:",b)}const I=S*BigInt(120)/BigInt(100),F=I*p,M=Number(F)/1e18,Z=`Gas: ${I.toString()}, Cost: ~${M.toFixed(6)} ETH`;return j(Z),x.ENABLE_CONSOLE_LOGS&&console.log("[AnonymousDebtManager] Gas estimation:",{method:d,estimatedGas:S.toString(),gasWithBuffer:I.toString(),gasPrice:p.toString(),costInEth:M.toFixed(6)}),{gasLimit:I,gasPrice:p,costInEth:M}}catch(y){return console.error("[AnonymousDebtManager] Gas estimation error:",y),a(N.GAS_ESTIMATION_FAILED,!0),null}},[t.provider,t.contract,a]),C=l.useCallback(async(d,u,b,y)=>{if(!t.contract||!t.signer)throw new Error("Contract or signer not available");try{const p=await O(d,u,b);if(!p)throw new Error("Failed to estimate gas fees");a(`${y} - Preparing transaction...`);const S=await t.contract[d](...u,{gasLimit:p.gasLimit,maxFeePerGas:$.maxFeePerGas,maxPriorityFeePerGas:$.maxPriorityFeePerGas});x.ENABLE_CONSOLE_LOGS&&console.log("[AnonymousDebtManager] Transaction submitted:",{method:d,hash:S.hash,gasLimit:p.gasLimit.toString()}),o&&o(S.hash),a(N.TRANSACTION_PENDING),j(null),a(N.TRANSACTION_CONFIRMING);const I=await S.wait($.confirmations);if(I.status===1)return a(N.TRANSACTION_SUCCESS),x.ENABLE_CONSOLE_LOGS&&console.log("[AnonymousDebtManager] Transaction confirmed:",{hash:S.hash,blockNumber:I.blockNumber,gasUsed:I.gasUsed?.toString(),explorerUrl:`${Q.TRANSACTION}/${S.hash}`}),{success:!0,receipt:I,hash:S.hash};throw new Error("Transaction failed during execution")}catch(p){throw console.error("[AnonymousDebtManager] Transaction failed:",p),p.code===4001?new Error(N.TRANSACTION_REJECTED):new Error(`${N.TRANSACTION_FAILED}: ${_(p)}`)}},[t.contract,t.signer,O,o,a]),A=l.useCallback(async()=>{if(!(!t.isConnected||!t.contract||!t.account))try{s(!0),a(N.LOADING_DATA);const d=`0x${Math.random().toString(16).substr(2,64)}`;try{const u=await t.contract.getUserAnonymousDebts(t.account,d),b=[];for(const y of u)try{const p=await t.contract.getAnonymousDebtInfo(y,d);b.push({id:Number(y),debtor:t.account,amount:Number(p[3])/100,interestRate:Number(p[4])/100,originalTerm:Number(p[4]),remainingTerm:Number(p[4]),createdAt:Number(p[3]),status:p[5],isAnonymous:p[6]})}catch{x.ENABLE_CONSOLE_LOGS&&console.warn("[AnonymousDebtManager] No access to debt:",y)}r(b)}catch{r([]),x.ENABLE_CONSOLE_LOGS&&console.log("[AnonymousDebtManager] No anonymous debts found for user")}try{const u=await t.contract.getUserAnonymousProposals(t.account,d),b=[];for(const y of u)try{const p=await t.contract.getAnonymousProposalInfo(y,d);b.push({id:Number(y),debtId:Number(p[0]),proposer:t.account,newAmount:Number(p[1])/100,newRate:Number(p[2])/100,newTerm:Number(p[3]),proposedAt:Number(p[4]),status:p[5],reason:p[7]})}catch{x.ENABLE_CONSOLE_LOGS&&console.warn("[AnonymousDebtManager] No access to proposal:",y)}h(b)}catch{h([]),x.ENABLE_CONSOLE_LOGS&&console.log("[AnonymousDebtManager] No anonymous proposals found for user")}a("Data loaded successfully!")}catch(d){const u=_(d);a(`Failed to load data: ${u}`,!0)}finally{s(!1)}},[t,a]),n=l.useCallback(async d=>{if(!t.isConnected||!t.contract||!t.provider)return a("Please connect your wallet first!",!0),!1;try{s(!0),a("Preparing FHE-style debt creation...");const u=parseFloat(d.amount),b=parseFloat(d.interestRate),y=parseInt(d.termDays);if(!q(u))throw new Error("Amount must be between $0.01 and $10,000,000");if(!Y(b))throw new Error("Interest rate must be between 0% and 100%");if(!z(y))throw new Error("Term must be between 1 day and 100 years");a(N.CREATING_DEBT);const p=Math.round(u*100),S=Math.round(b*100),I=`0x${Math.random().toString(16).substr(2,64)}`;return(await C("createAnonymousDebt",[p,S,y,I],G.CREATE_DEBT,"Creating anonymous encrypted debt record")).success?(a("Anonymous FHE-style debt record created successfully! üîêüë§"),await A(),!0):!1}catch(u){return a(u.message||`Failed to create debt: ${_(u)}`,!0),!1}finally{s(!1)}},[t,a,A,C]),f=l.useCallback(async d=>{if(!t.isConnected||!t.contract||!t.provider)return a("Please connect your wallet first!",!0),!1;try{s(!0),a("Preparing restructuring proposal...");const u=parseFloat(d.newAmount),b=parseFloat(d.newRate),y=parseInt(d.newTerm);if(!q(u))throw new Error("New amount must be between $0.01 and $10,000,000");if(!Y(b))throw new Error("New interest rate must be between 0% and 100%");if(!z(y))throw new Error("New term must be between 1 day and 100 years");a(N.PROPOSING_RESTRUCTURING);const p=Math.round(u*100),S=Math.round(b*100),I=`0x${Math.random().toString(16).substr(2,64)}`,F=[parseInt(d.selectedDebtId),p,S,y,d.reason||"Anonymous debt restructuring request",I];return(await C("proposeAnonymousRestructuring",F,G.PROPOSE_RESTRUCTURING,"Submitting anonymous restructuring proposal")).success?(a("Anonymous FHE-style restructuring proposal submitted successfully! üîêüìãüë§"),await A(),!0):!1}catch(u){return a(u.message||`Failed to submit proposal: ${_(u)}`,!0),!1}finally{s(!1)}},[t,a,A,C]),T=l.useCallback(async(d,u)=>{if(!t.isConnected||!t.contract)return a("Please connect your wallet first!",!0),!1;try{s(!0),a(N.APPROVING_PROPOSAL);const b=`0x${Math.random().toString(16).substr(2,64)}`;return(await C("processAnonymousProposal",[d,u,b],G.APPROVE_PROPOSAL,`${u?"Approving":"Rejecting"} anonymous restructuring proposal`)).success?(a(`Anonymous proposal ${u?"approved":"rejected"} successfully! üë§`),await A(),!0):!1}catch(b){return a(b.message||`Failed to ${u?"approve":"reject"} proposal: ${_(b)}`,!0),!1}finally{s(!1)}},[t,a,A,C]),D=l.useCallback(async d=>{if(!t.isConnected||!t.contract)return a("Please connect your wallet first!",!0),!1;try{return s(!0),a(N.EXECUTING_PROPOSAL),(await C("executeProposal",[d],G.EXECUTE_PROPOSAL,"Executing approved restructuring proposal")).success?(a("Proposal executed successfully! üöÄ"),await A(),!0):!1}catch(u){return a(u.message||`Failed to execute proposal: ${_(u)}`,!0),!1}finally{s(!1)}},[t,a,A,C]),w=l.useCallback(async d=>{if(!t.isConnected||!t.contract)return a("Please connect your wallet first!",!0),!1;try{s(!0),a(N.MARKING_RESOLVED);const u=`0x${Math.random().toString(16).substr(2,64)}`;return(await C("finalizeAnonymousDebt",[d,u],G.MARK_RESOLVED,"Finalizing anonymous debt resolution")).success?(a("Anonymous debt finalized successfully! ‚úÖüë§"),await A(),!0):!1}catch(u){return a(u.message||`Failed to resolve debt: ${_(u)}`,!0),!1}finally{s(!1)}},[t,a,A,C]);return l.useEffect(()=>{t.isConnected&&A()},[t.isConnected,A]),{userDebts:m,userProposals:c,isLoading:E,error:i,transactionStatus:v,estimatedGas:P,createDebt:n,proposeRestructuring:f,approveProposal:T,executeProposal:D,markDebtResolved:w,loadUserData:A,setStatus:a,estimateGas:O}},be=()=>e.jsxs("div",{className:"terminal-header",children:[e.jsx("h1",{children:"üîê ANONYMOUS DEBT RESTRUCTURING PLATFORM"}),e.jsx("p",{className:"terminal-subtitle",children:"> Secure ‚Ä¢ Private ‚Ä¢ Blockchain-Powered Financial Management"})]}),ge=({message:t,isError:o=!1})=>e.jsxs("div",{className:`status-message ${o?"error":"success"}`,children:[e.jsx("span",{children:o?"‚ùå":"‚úÖ"})," ",t]}),Ne=({onConnect:t,isLoading:o})=>e.jsxs("div",{className:"wallet-connection",children:[e.jsxs("div",{className:"connect-prompt",children:[e.jsx("p",{children:"> Connect your MetaMask wallet to access the platform"}),e.jsx("p",{children:"> Your financial data will be encrypted and stored securely on-chain"})]}),e.jsx("button",{className:"connect-button",onClick:t,disabled:o,children:o?"Connecting...":"ü¶ä Connect MetaMask Wallet"})]}),Ee=({onTabChange:t})=>{const o=[{title:"Personal Loan",description:"Standard personal loan restructuring",action:()=>t("create")},{title:"Credit Card Debt",description:"Credit card balance consolidation",action:()=>t("create")},{title:"View My Debts",description:"Check existing debt records",action:()=>t("view")},{title:"Propose Changes",description:"Submit restructuring proposal",action:()=>t("propose")}];return e.jsxs("div",{className:"debt-presets",children:[e.jsx("h3",{children:"> Quick Actions"}),e.jsx("div",{className:"preset-buttons",children:o.map((m,r)=>e.jsx("button",{className:"preset-button",onClick:m.action,title:m.description,children:m.title},r))})]})},Ae=({activeTab:t,onTabChange:o,debtCount:m})=>{const r=[{id:"create",label:"Create Debt",icon:"üìù"},{id:"view",label:`View Debts (${m})`,icon:"üìã"},{id:"propose",label:"Propose Restructuring",icon:"üîÑ"}];return e.jsx("div",{className:"tab-navigation",children:r.map(c=>e.jsxs("button",{className:`tab-button ${t===c.id?"active":""}`,onClick:()=>o(c.id),children:[c.icon," ",c.label]},c.id))})},xe=({onSubmit:t,isLoading:o})=>{const[m,r]=l.useState(""),[c,h]=l.useState(""),[E,s]=l.useState(""),[i,R]=l.useState(!0),v=g=>{g.preventDefault(),m&&c&&E&&t({amount:m,interestRate:c,termDays:E,isAnonymous:i})};return e.jsxs("div",{className:"form-container",children:[e.jsx("h3",{children:"> Create New Debt Record"}),e.jsxs("form",{onSubmit:v,className:"debt-form",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"amount",children:"> Debt Amount (USD):"}),e.jsx("input",{type:"number",id:"amount",value:m,onChange:g=>r(g.target.value),placeholder:"Enter amount (e.g., 10000)",min:"0.01",step:"0.01",required:!0})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"interestRate",children:"> Interest Rate (%):"}),e.jsx("input",{type:"number",id:"interestRate",value:c,onChange:g=>h(g.target.value),placeholder:"Enter rate (e.g., 5.5)",min:"0",max:"100",step:"0.01",required:!0})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"termInDays",children:"> Term (Days):"}),e.jsx("input",{type:"number",id:"termInDays",value:E,onChange:g=>s(g.target.value),placeholder:"Enter term in days (e.g., 365)",min:"1",max:"36500",required:!0})]}),e.jsx("div",{className:"form-group checkbox-group",children:e.jsxs("label",{children:[e.jsx("input",{type:"checkbox",checked:i,onChange:g=>R(g.target.checked)}),"> Keep debt record anonymous (recommended for privacy)"]})}),e.jsx("button",{type:"submit",className:"submit-button",disabled:o||!m||!c||!E,children:o?"Creating Debt Record...":"üîí Create Encrypted Debt Record"})]})]})},Ce=({debts:t,proposals:o,onMarkResolved:m,isLoading:r})=>{const c=s=>`$${(s/100).toFixed(2)}`,h=s=>`${(s/100).toFixed(2)}%`,E=s=>new Date(s*1e3).toLocaleDateString();return e.jsxs("div",{className:"view-container",children:[e.jsxs("h3",{children:["> Your Debt Records (",t.length,")"]}),t.length===0?e.jsx("div",{className:"empty-state",children:e.jsx("p",{children:"> No debt records found. Create your first debt record to get started!"})}):e.jsx("div",{className:"debts-list",children:t.map(s=>e.jsxs("div",{className:"debt-item",children:[e.jsxs("div",{className:"debt-header",children:[e.jsxs("span",{className:"debt-id",children:["Debt ID: ",s.id]}),e.jsx("span",{className:`debt-status ${B[s.status].toLowerCase()}`,children:B[s.status]})]}),e.jsxs("div",{className:"debt-details",children:[e.jsxs("div",{className:"detail-row",children:[e.jsx("span",{children:"Amount:"}),e.jsx("span",{className:"highlight",children:c(s.amount)})]}),e.jsxs("div",{className:"detail-row",children:[e.jsx("span",{children:"Interest Rate:"}),e.jsx("span",{children:h(s.interestRate)})]}),e.jsxs("div",{className:"detail-row",children:[e.jsx("span",{children:"Term:"}),e.jsxs("span",{children:[s.originalTerm," days"]})]}),e.jsxs("div",{className:"detail-row",children:[e.jsx("span",{children:"Remaining:"}),e.jsxs("span",{children:[s.remainingTerm," days"]})]}),e.jsxs("div",{className:"detail-row",children:[e.jsx("span",{children:"Created:"}),e.jsx("span",{children:E(s.createdAt)})]}),e.jsxs("div",{className:"detail-row",children:[e.jsx("span",{children:"Privacy:"}),e.jsx("span",{children:s.isAnonymous?"üîí Anonymous":"üîì Public"})]})]}),s.status===B.ACTIVE&&e.jsx("button",{className:"resolve-button",onClick:()=>m(s.id),disabled:r,children:"Mark as Resolved"})]},s.id))}),o.length>0&&e.jsxs("div",{className:"proposals-section",children:[e.jsxs("h3",{children:["> Active Proposals (",o.length,")"]}),e.jsx("div",{className:"proposals-list",children:o.map(s=>e.jsxs("div",{className:"proposal-item",children:[e.jsxs("div",{className:"proposal-header",children:[e.jsxs("span",{children:["Proposal ID: ",s.id]}),e.jsx("span",{className:`proposal-status ${K[s.status].toLowerCase()}`,children:K[s.status]})]}),e.jsxs("div",{className:"proposal-details",children:[e.jsxs("p",{children:["Debt ID: ",s.debtId]}),e.jsxs("p",{children:["New Amount: ",c(s.newAmount)]}),e.jsxs("p",{children:["New Rate: ",h(s.newRate)]}),e.jsxs("p",{children:["New Term: ",s.newTerm," days"]}),e.jsxs("p",{children:["Reason: ",s.reason]})]})]},s.id))})]})]})},we=({debts:t,onSubmit:o,isLoading:m})=>{const[r,c]=l.useState(""),[h,E]=l.useState(""),[s,i]=l.useState(""),[R,v]=l.useState(""),[g,P]=l.useState(""),j=t.filter(n=>n.status===0),a=j.find(n=>n.id===parseInt(r)),O=n=>{n.preventDefault(),r&&h&&s&&R&&g&&o({selectedDebtId:r,newAmount:h,newRate:s,newTerm:R,reason:g})},C=n=>`$${(n/100).toFixed(2)}`,A=n=>`${(n/100).toFixed(2)}%`;return e.jsxs("div",{className:"form-container",children:[e.jsx("h3",{children:"> Propose Debt Restructuring"}),j.length===0?e.jsx("div",{className:"empty-state",children:e.jsx("p",{children:"> No active debts available for restructuring. Create a debt record first!"})}):e.jsxs("form",{onSubmit:O,className:"restructuring-form",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"debtId",children:"> Select Debt to Restructure:"}),e.jsxs("select",{id:"debtId",value:r,onChange:n=>c(n.target.value),required:!0,children:[e.jsx("option",{value:"",children:"Choose a debt record..."}),j.map(n=>e.jsxs("option",{value:n.id,children:["Debt #",n.id," - ",C(n.amount)," at ",A(n.interestRate)]},n.id))]})]}),a&&e.jsxs("div",{className:"current-terms",children:[e.jsx("h4",{children:"> Current Terms:"}),e.jsxs("div",{className:"terms-display",children:[e.jsxs("p",{children:["Amount: ",C(a.amount)]}),e.jsxs("p",{children:["Interest Rate: ",A(a.interestRate)]}),e.jsxs("p",{children:["Remaining Term: ",a.remainingTerm," days"]})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"newAmount",children:"> New Amount (USD):"}),e.jsx("input",{type:"number",id:"newAmount",value:h,onChange:n=>E(n.target.value),placeholder:"Enter new amount",min:"0.01",step:"0.01",required:!0})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"newRate",children:"> New Interest Rate (%):"}),e.jsx("input",{type:"number",id:"newRate",value:s,onChange:n=>i(n.target.value),placeholder:"Enter new rate",min:"0",max:"100",step:"0.01",required:!0})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"newTerm",children:"> New Term (Days):"}),e.jsx("input",{type:"number",id:"newTerm",value:R,onChange:n=>v(n.target.value),placeholder:"Enter new term in days",min:"1",max:"36500",required:!0})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"reason",children:"> Reason for Restructuring:"}),e.jsx("textarea",{id:"reason",value:g,onChange:n=>P(n.target.value),placeholder:"Explain why you need to restructure this debt...",rows:4,required:!0})]}),e.jsx("button",{type:"submit",className:"submit-button",disabled:m||!r||!h||!s||!R||!g,children:m?"Submitting Proposal...":"üìã Submit Restructuring Proposal"})]})]})},Se=()=>{const[t,o]=l.useState("create"),m=fe(),r=ye(m.wallet,m.addTransaction),c=m.error||r.error,h=m.isLoading||r.isLoading;return e.jsx("div",{className:"app",children:e.jsxs("div",{className:"terminal-box",children:[e.jsx(be,{}),e.jsxs("div",{className:"blockchain-info",children:[e.jsxs("p",{children:["> ",e.jsx("strong",{children:"PRIVACY-FIRST DEBT MANAGEMENT"})," - Powered by Blockchain Encryption!"]}),e.jsxs("p",{children:["> Contract:"," ",e.jsx("span",{className:"highlight",children:m.wallet.isConnected?V(k):"Not Connected"})]}),e.jsxs("p",{children:["> Network: ",e.jsx("span",{className:"highlight",children:"Sepolia Testnet"})]})]}),e.jsxs("div",{className:"terminal-text",children:[e.jsx("p",{children:"> Welcome to the Anonymous Debt Restructuring Platform."}),e.jsx("p",{children:"> Manage your debts privately using blockchain encryption technology."}),e.jsx("p",{children:"> All financial data is encrypted on-chain - complete privacy guaranteed."}),e.jsx("p",{children:"> Create debt records, propose restructuring terms, and resolve debts securely."}),e.jsx("p",{children:"> Your financial information remains confidential at every step."})]}),e.jsx(ge,{message:c||r.transactionStatus||"Ready to manage debts anonymously!",isError:!!c}),r.estimatedGas&&e.jsxs("div",{className:"gas-estimation",children:[e.jsx("span",{className:"highlight",children:"‚õΩ Gas Estimation:"})," ",r.estimatedGas]}),!m.wallet.isConnected&&e.jsx(Ne,{onConnect:m.connectWallet,isLoading:h}),m.wallet.isConnected&&e.jsxs(e.Fragment,{children:[e.jsx(Ee,{onTabChange:o}),e.jsx(Ae,{activeTab:t,onTabChange:o,debtCount:r.userDebts.length}),t==="create"&&e.jsx(xe,{onSubmit:r.createDebt,isLoading:h}),t==="view"&&e.jsx(Ce,{debts:r.userDebts,proposals:r.userProposals,onMarkResolved:r.markDebtResolved,isLoading:h}),t==="propose"&&e.jsx(we,{debts:r.userDebts,onSubmit:r.proposeRestructuring,isLoading:h}),e.jsxs("div",{className:"button-group",children:[e.jsxs("button",{className:"wallet-button connected",disabled:!0,children:["üîê ",V(m.wallet.account||"")]}),e.jsxs("button",{className:"wallet-button",onClick:m.refreshBalance,disabled:h,children:["üí∞ ",m.walletState.balance.slice(0,8)," ETH"]}),m.walletState.lastTransactionHash&&e.jsx("button",{className:"wallet-button",onClick:()=>window.open(`https://sepolia.etherscan.io/tx/${m.walletState.lastTransactionHash}`,"_blank"),children:"üîç View Last Transaction"})]})]}),e.jsxs("div",{className:"footer",children:[e.jsx("p",{children:"> Anonymous Debt Management - Your Privacy is Protected!"}),e.jsx("p",{children:"> Powered by Blockchain Encryption Technology"})]})]})})};W.createRoot(document.getElementById("root")).render(e.jsx(te.StrictMode,{children:e.jsx(Se,{})}));
